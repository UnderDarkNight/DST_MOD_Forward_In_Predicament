----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--[[

    本文件用来处理 饥荒 RPC 传送信道 不能传送过长的 CDK内容的问题。

    以50个数字为 一组，把长CDK 切割，并合并。

    local cd_key = "[637,1684,102,888,1092,1566,1009,1330,1708,2262,157,1053,1326,281,1501,475,1330,2111,2050,1009,2111,1684,1002,2262,903,1597,475,475,405,281,1482,1899,2068,1900,1899,1448,888,411,157,1900,279,1255,239,1373,1467,2068,1094,903,475,888,13,1501,888,157,1900,2111,1899,1735,1467,1900,2142,1045,669,281,903,1597,1892,903,475,888,2177,1053,1326,1482,2111,903,2068,888,1501,1485,1641,1279,1402,2068,1900,1092,1448,903,1892,1092,157,1501,1448,1485,1485,1467,1735,1394,1373,1899,1083,1231,690,1735,1708,13,13,1330,405,475,411,1467,1467,1596,405,763]"

]]--
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
local CUT_NUM = 50
local function cut_cdk(cd_key_str)
    local cd_key_table = json.decode(cd_key_str)
    local cut_table = {}
    local table_num = math.ceil(#cd_key_table / CUT_NUM)
    for i = 1, table_num do
        local start = (i - 1) * CUT_NUM + 1
        local end_ = i * CUT_NUM
        local cut = {}
        for j = start, end_ do
            cut[#cut + 1] = cd_key_table[j]
        end
        cut_table[#cut_table + 1] = cut
    end
    return cut_table
end

local function merge_cdk(cut_table)
    local cd_key_table = {}
    for i, cut in ipairs(cut_table) do
        for j, num in ipairs(cut) do
            cd_key_table[#cd_key_table + 1] = num
        end
    end
    return json.encode(cd_key_table)
end

return {
    cut_cdk = cut_cdk,
    merge_cdk = merge_cdk
}