local flg,error_code = pcall(function()
    print("WARNING:PCALL START +++++++++++++++++++++++++++++++++++++++++++++++++")
    local x,y,z =    ThePlayer.Transform:GetWorldPosition()  
    ----------------------------------------------------------------------------------------------------------------    ----------------------------------------------------------------------------------------------------------------
    --- 洞穴里的虚空tile 为 1
    ---  201 ~ 247 都是海洋
    --- 浅海 tile  201
    --- 中海 tile  203
    --- 深海 tile  204
    --- 其他  205 
    --- API   IsOceanTile(tile)
    ---- 一个地皮 4X4 距离

    -- if not ThePlayer:HasTag("map_test") then
    --     TheCamera:SetMaxDistance(100)
    --     TheCamera.fov = 50
        -- Walk_in_sea_ON(ThePlayer)
    --     ThePlayer:AddTag("map_test")
    --     return
    -- end
    -- Walk_in_sea_OFF(ThePlayer)
    -- print("player",x,z)
    -- local map_w,map_h = TheWorld.Map:GetSize()
    -- print("map",map_w,map_h)
    -- local mid_tile_x , mid_tile_y = TheWorld.Map:GetTileCoordsAtPoint(x,0,z)
    -- print("tile",mid_tile_x,mid_tile_y)

    -- print("current tile ",TheWorld.Map:GetTileAtPoint(x,y,z))

    -- print("current tile ",TheWorld.Map:GetTileAtPoint(ThePlayer.Transform:GetWorldPosition()))
    -- TheWorld.Map:SetTile(mid_tile_x,mid_tile_y,4)

    -- ThePlayer.Transform:SetPosition(-14000, 0, -14000)
    -- print("Ocean Tile :",IsOceanTile(TheWorld.Map:GetTileAtPoint(x,y,z)))
    -- ThePlayer.Transform:SetPosition(0, 0, 0)
    -- 
        -- local ent = TheSim:FindFirstEntityWithTag("fwd_in_pdt__special_island.gateway")
        -- if ent then
        --     ThePlayer.Transform:SetPosition(ent.Transform:GetWorldPosition())
        -- end

        -- ThePlayer.components.fwd_in_pdt_func:TheCamera_SetFov(60)

        -- for k, v in pairs(TheWorld.topology.nodes) do
        --     print(k,v)
        -- end
        -- print(TheWorld.Map:GetTileCoordsAtPoint(ThePlayer.Transform:GetWorldPosition()))
    ----------------------------------------------------------------------------------------------------------------
        -- local tile_x,tile_y = TheWorld.Map:GetTileCoordsAtPoint(x,y,z)
        -- print(tile_x,tile_y)

        -- -- TheWorld.Map:SetTile(tile_x,tile_y,1)
        -- for xx = 1, 5, 1 do
        --     for yy = 1, 5, 1 do
        --         TheWorld.Map:SetTile(tile_x+xx,tile_y+yy,1)
        --     end
        -- end

    ----------------------------------------------------------------------------------------------------------------
    --- 洞穴穿越树木 测试
        -- local inst = TheSim:FindFirstEntityWithTag("fwd_in_pdt__rooms_mini_portal_door")
        -- -- local inst = TheSim:FindFirstEntityWithTag("fwd_in_pdt__special_island.gateway2")
        -- -- local inst = TheSim:FindFirstEntityWithTag("fwd_in_pdt__rooms_quirky_red_tree")
        -- if inst then
        --     -- ThePlayer.Transform:SetPosition(inst.Transform:GetWorldPosition())
        --     inst:PushEvent("active",ThePlayer)

        -- end
    ----------------------------------------------------------------------------------------------------------------
    -- ThePlayer.Transform:SetPosition(-14000, 0, -14000)
    -- ThePlayer.Transform:SetPosition(0, 0, 0)
    -- x,y,z = ThePlayer.Transform:GetWorldPosition()  
    -- local mid_tile_x , mid_tile_z = TheWorld.Map:GetTileCoordsAtPoint(0, 0, 0)
    -- print(mid_tile_x , mid_tile_z)
    -- TheWorld.Map:SetTile(mid_tile_x,mid_tile_z,12)
    -- local xx = 2
    -- while xx < 4900 do        
    --     local mid_tile_x , mid_tile_z = TheWorld.Map:GetTileCoordsAtPoint(xx,0,2)
    --     print(mid_tile_x,mid_tile_z)
    --     TheWorld.Map:SetTile(mid_tile_x,mid_tile_z,12)
    --     xx = xx + 4
    -- end
    
    ----------------------------------------------------------------------------------------------------------------
    -------- 视野扩大
    -- TheCamera:SetMaxDistance(100)
    -- TheCamera.fov = 50
    ----------------------------------------------------------------------------------------------------------------
    ---- 礼物盒
        -- local gift = SpawnPrefab("fwd_in_pdt_gift_pack")
        -- gift:PushEvent("Set",{
        --         items = {
        --                    {"log",20},
        --                    {"goldnugget",100}
        --          },
        --         --  name = "FFFFFFFFFFFFFFFFFF",
        --         --  inspect_str = "666666666666666666666666666",
        --          skin_num = 5,   -- 1~6
        -- })
        -- ThePlayer.components.inventory:GiveItem(gift)

    ----------------------------------------------------------------------------------------------------------------
    ----------------------------------------------------------------------------------------------------------------
    --- 体质值系统调试
        -- local num,p = ThePlayer.replica.fwd_in_pdt_wellness:Get_Wellness()
        -- print(num,p)
        -- ThePlayer.components.fwd_in_pdt_wellness:All_Datas_Reset()
        -- print( ThePlayer.components.fwd_in_pdt_wellness:GetCurrent_Wellness())
        -- print( ThePlayer.components.fwd_in_pdt_wellness:GetCurrent())
        -- ThePlayer.components.fwd_in_pdt_wellness:DoDelta_Wellness(-100)
        -- ThePlayer.components.fwd_in_pdt_wellness:Refresh()

        -- ThePlayer.components.fwd_in_pdt_wellness:External_DoDelta_Wellness(5)

        -- ThePlayer.components.fwd_in_pdt_wellness:Refresh()

        -- ThePlayer.components.workmultiplier:AddMultiplier(ACTIONS.CHOP,0.5,ThePlayer)
        -- ThePlayer.components.workmultiplier:RemoveMultiplier(ACTIONS.CHOP,ThePlayer)
        -- ThePlayer.components.health:DeltaPenalty(0.2)
        -- ThePlayer.sg:GoToState("fwd_in_pdt_wellness_cough")

        -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_cough")
        -- ThePlayer.components.fwd_in_pdt_wellness:Remove_Debuff("fwd_in_pdt_welness_cough")

        -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_fever")
        -- ThePlayer.components.fwd_in_pdt_wellness:Remove_Debuff("fwd_in_pdt_welness_fever")

        -- ThePlayer.components.fwd_in_pdt_wellness.DEBUGGING_MODE = true
    ----------------------------------------------------------------------------------------------------------------
    --- 体质值 HUD 调试
            -- local TheAnim = ThePlayer.HUD.fwd_in_pdt_wellness.wellness_bar:GetAnimState()
            -- TheAnim:SetTime(0)
            -- ThePlayer.HUD.fwd_in_pdt_wellness:HideOhters()
            -- ThePlayer.HUD.fwd_in_pdt_wellness:ShowOhters()
        -- ThePlayer.components.fwd_in_pdt_wellness:HudShowOhters(true)
        -- ThePlayer.components.fwd_in_pdt_wellness:HudShowOhters(false)
            -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_snake_poison")  
            -- ThePlayer.components.fwd_in_pdt_wellness:SetCurrent_Wellness(0)
            -- ThePlayer.components.fwd_in_pdt_wellness:DoDelta_Wellness(-10)
            -- ThePlayer.components.fwd_in_pdt_wellness:DoDelta_Vitamin_C(100)
            -- ThePlayer.components.fwd_in_pdt_wellness:Refresh()
    ----------------------------------------------------------------------------------------------------------------
    --- 路灯灯光调试
            -- local ents = TheSim:FindEntities(x, y, z, 50, {"fwd_in_pdt_building_banner_light"}, nil, nil)
            -- for k, inst in pairs(ents) do
            --     if inst then
            --         inst.Light:SetIntensity(0.5)		-- 强度
            --         inst.Light:SetRadius(5)			-- 半径 ，矩形的？？ --- SetIntensity 为1 的时候 成矩形
            --         inst.Light:SetFalloff(1)		-- 下降梯度
            --         inst.Light:SetColour(255 / 255, 255 / 255, 255 / 255)

            --     end
            -- end
    ----------------------------------------------------------------------------------------------------------------
            -- ThePlayer.components.fwd_in_pdt_func:TheCamera_ClearTarget()
                
    ----------------------------------------------------------------------------------------------------------------
    --- 青蛙变异测试
                -- local frog = SpawnPrefab("frog")
                -- frog.Transform:SetPosition(x+10, y, z)
                -- frog:PushEvent("fwd_in_pdt_event.start_mutant")
    ----------------------------------------------------------------------------------------------------------------
    --- 书本动作
                -- ThePlayer.AnimState:PlayAnimation("book")
                -- ThePlayer.AnimState:PushAnimation("book")
                -- ThePlayer.AnimState:PlayAnimation("action_uniqueitem_pre")
                -- ThePlayer.AnimState:PushAnimation("peruse", false)
                -- ThePlayer.SoundEmitter:PlaySound("dontstarve/common/book_spell")
                -- ThePlayer.SoundEmitter:PlaySound("wickerbottom_rework/book_spells/upgraded_horticulture")
    ----------------------------------------------------------------------------------------------------------------
    --- 鱼池 container widget 穿插
                -- for k, widget in pairs(ThePlayer.HUD.controls.containers) do
                --     -- print(k,v)
                --     -- for kk, vv in pairs(v) do
                --     --     print(kk,vv)

                --     -- end
                --     local text = widget.__test_str
                --     if text == nil then
                --         text = widget:AddChild(Text(CODEFONT,100,"100.42",{ 255/255 , 255/255 ,255/255 , 1}))
                --         widget.__test_str = text
                --     end
                -- end
                -- local inst = TheSim:FindFirstEntityWithTag("fwd_in_pdt_fish_farm")
                -- if inst then
                --     inst:PushEvent("daily_task_start")
                -- end
    ----------------------------------------------------------------------------------------------------------------
    ---- 诊断单界面测试
                    -- ThePlayer.HUD:fwd_in_pdt_medical_certificate_show()
                -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_snake_poison")
                -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_frog_poison")
                -- -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_spider_poison")
                -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_bee_poison")
                -- -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_cough")
                -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_fever")
    ----------------------------------------------------------------------------------------------------------------
    -- 新月
        -- TheWorld:PushEvent("ms_setmoonphase", {moonphase = "full"})
        -- TheWorld:PushEvent("ms_setmoonphase", {moonphase = "new" ,iswaxing = true})
    ----------------------------------------------------------------------------------------------------------------
    -- 工作台界面
        -- ThePlayer.HUD:fwd_in_pdt_special_production_formulated_crystal_widget_open()
    ----------------------------------------------------------------------------------------------------------------
    -- sg 监控
                    -- ThePlayer:ListenForEvent("newstate",function(_,_table)
                    --     if _table and _table.statename then
                    --         print("statename",_table.statename)
                    --     end
                    -- end)
    ----------------------------------------------------------------------------------------------------------------
    -- ATM 核心 API 测试
                    -- ThePlayer.components.fwd_in_pdt_func:Jade_Coin__ATM_SaveMoney(30)
                    -- ThePlayer.components.fwd_in_pdt_func:Jade_Coin__ATM_WithdrawMoney(25)
                    -- ThePlayer.HUD:fwd_in_pdt_ad()
    ----------------------------------------------------------------------------------------------------------------
    -- bonestew   fwd_in_pdt_food_mixed_potato_soup
                    -- local cooking = require("cooking")
                    -- local recipes = {}
                    -- for port, temp_recipe in pairs(cooking.recipes) do
                    --     for food_name, _table in pairs(temp_recipe) do
                    --         recipes[food_name] = _table
                    --     end
                    -- end
                    -- local temp = ThePlayer.components.knownfoods:_SmartSearch(recipes["fwd_in_pdt_food_mixed_potato_soup"].test)
                    -- print(temp)
                    -- for k, v in pairs(ThePlayer.components.knownfoods._knownfoods) do
                    --     print(k,v)
                    -- end
    ----------------------------------------------------------------------------------------------------------------
                -- local TileManager = require("tilemanager")
                -- print(WORLD_TILES[string.upper("fwd_in_pdt_turf_test")])
                -- ThePlayer.components.fwd_in_pdt_func:VIP_Player_Input_Key("---")
    ----------------------------------------------------------------------------------------------------------------
    -- for k, temp_player in pairs(AllPlayers) do
    --     if temp_player and temp_player:HasTag("player") and temp_player.components.fwd_in_pdt_func and temp_player.components.fwd_in_pdt_func.Wisper then
    --             temp_player.components.fwd_in_pdt_func:Wisper({
    --                 m_colour = {0,255,255} ,                          ---- 内容颜色
    --                 s_colour = {255,255,0},                         ---- 发送者颜色
    --                 icondata = "profileflair_shadowhand",        ---- 图标
    --                 message = "6666666666666666",                                 ---- 文字内容
    --                 sender_name = "FWD",                               ---- 发送者名字
    --             })
    --     end
    -- end
    ----------------------------------------------------------------------------------------------------------------
    --- 娃娃机事件调试 
        -- ThePlayer.HUD:fwd_in_pdt_doll_clamping_machine_open()
        -- ThePlayer:PushEvent("doll_clamping_machine_selected",1)
        -- ThePlayer.components.sleeper:AddSleepiness(100,30)

        -- local function HearPanFlute(inst)
        --     if inst and not inst:HasTag("playerghost") and
        --         not (inst.components.freezable ~= nil and inst.components.freezable:IsFrozen()) and
        --         not (inst.components.pinnable ~= nil and inst.components.pinnable:IsStuck()) and
        --         not (inst.components.fossilizable ~= nil and inst.components.fossilizable:IsFossilized()) then
        --         local mount = inst.components.rider ~= nil and inst.components.rider:GetMount() or nil
        --         if mount ~= nil then
        --             mount:PushEvent("ridersleep", { sleepiness = 10, sleeptime = TUNING.PANFLUTE_SLEEPTIME })
        --         end
        --         if inst.components.sleeper ~= nil then
        --             inst.components.sleeper:AddSleepiness(10, TUNING.PANFLUTE_SLEEPTIME)
        --         elseif inst.components.grogginess ~= nil then
        --             inst.components.grogginess:AddGrogginess(10, TUNING.PANFLUTE_SLEEPTIME)
        --         else
        --             inst:PushEvent("knockedout")
        --         end
        --     end
        -- end
        -- HearPanFlute(ThePlayer)
    ----------------------------------------------------------------------------------------------------------------
    -- ThePlayer:PushEvent("learnrecipe", { teacher = ThePlayer, recipe = "fwd_in_pdt_building_special_cookpot" })
    ----------------------------------------------------------------------------------------------------------------
    -- ThePlayer.components.talker:Say(ThePlayer.components.fwd_in_pdt_func:IsAdmin() and "有管理员权限" or "没管理员权限")
    ----------------------------------------------------------------------------------------------------------------
    -- print(ThePlayer.components.fwd_in_pdt_func:Jade_Coin__Spend(100))
    ----------------------------------------------------------------------------------------------------------------
    --- 地图解锁
            -------   doer.player_classified.MapExplorer  组件 有很多函数

            -- ---- 只能去除阴影。但是没内部inst
            --     local   minimap = TheSim:FindFirstEntityWithTag("minimap")
            --     -- minimap.MiniMap:ShowArea(0,0,0, 10000)
            --     minimap.MiniMap:ShowArea(0,0,0, 500)
            --     ThePlayer.player_classified.MapExplorer:RevealArea(x,0,y)
            -- ---- 阴影和内部一起展示
            --     for xx=-1600,1600,35 do
            --          for yy=-1600,1600,35 do
            --                 ThePlayer.player_classified.MapExplorer:RevealArea(xx,0,yy) 
            --         end
            --     end
            -- ThePlayer.player_classified.MapExplorer:RevealArea(x,0,y) ---- 只显示一个屏幕的区域（默认，对角直径40）
            -- ThePlayer.player_classified.MapExplorer:RevealArea(x+20,0,y)
            -------------------------------------------------------
                    -- print(type(ThePlayer.player_classified.MapExplorer))

                    -- local temp_MapExplorer = getmetatable(ThePlayer.player_classified.MapExplorer).__index
                    -- for k, v in pairs(temp_MapExplorer) do
                    --     print(k,v)
                    -- end
    ----------------------------------------------------------------------------------------------------------------
                        -- -- ThePlayer.HUD:fwd_in_pdt_task_scroll_widget_open()
                        -- local item = SpawnPrefab("fwd_in_pdt_task_scroll__items_ask")
                        -- -- item:PushEvent("Set","fwd_in_pdt_task_scroll__ice")
                        -- -- item:PushEvent("Set","fwd_in_pdt_task_scroll__fertilizer")
                        -- item:PushEvent("Set","fwd_in_pdt_task_scroll__yellowstaff")
                        -- ThePlayer.components.inventory:GiveItem(item)
    ----------------------------------------------------------------------------------------------------------------
    -- --- 烹饪锅贴图调试
    --         local cooking = require("cooking")
    --         -- local recipe = cooking.GetRecipe("cookpot", "bonestew")
    --         -- for k, v in pairs(recipe) do
    --         --     print(k,v)
    --         -- end
    --         local foods = require("preparedfoods")
    --         for k, v in pairs(foods["bonestew"]) do
    --             print(k,v)
    --         end
    ----------------------------------------------------------------------------------------------------------------
    --- 立绘播放
        -- ThePlayer:PushEvent("fwd_in_pdt.drawing.display",{
        --     bank = "fwd_in_pdt_drawing_test",
        --     build = "fwd_in_pdt_drawing_test",
        --     anim = "idle",
        --     scale = 0.3,
        --     speed = 2,
        --     loop = true,
        --     -- id = "555",
        --     location = 7,
        --     -- kill = true,
        --     a = 0.5,
        -- })
    ----------------------------------------------------------------------------------------------------------------
    --- 
            -- ThePlayer.components.health.currenthealth = 20
            -- ThePlayer.components.fwd_in_pdt_wellness:Remove_Debuff("fwd_in_pdt_welness_carl_thirst_for_blood")
            -- ThePlayer:PushEvent("fwd_in_pdt.drawing.display",{
            --     bank = "fwd_in_pdt_drawing_carl_spell_a",
            --     build = "fwd_in_pdt_drawing_carl_spell_a",
            --     anim = "idle",
            --     location = 5,
            --     pt = Vector3(0,100),
            --     scale = 0.7,
            -- })
            -- ThePlayer.components.skinner:SetSkinName("fwd_in_pdt_carl_skin_flame")
            -- ThePlayer.components.skinner:SetSkinName("")
            -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_snake_poison")  
    ----------------------------------------------------------------------------------------------------------------
            -- local monster = SpawnPrefab("hound")
            -- monster.Transform:SetPosition(x, y, z)
            -- monster.AnimState:SetBuild("fwd_in_pdt_animal_frog_dog")
    ----------------------------------------------------------------------------------------------------------------
    ---- 
            -- ThePlayer.components.inventory:GiveItem(SpawnPrefab("fwd_in_pdt_item_treatment_from_doctor"))
            -- ThePlayer.components.fwd_in_pdt_func:Wisper({
            --         m_colour = {0,250,250} ,                          ---- 内容颜色
            --         message = "ABCDEFG",                            ---- 文字内容
            -- })
    ----------------------------------------------------------------------------------------------------------------
            -- SpawnPrefab("fwd_in_pdt_fx_explode"):PushEvent("Set",{
            --     pt = Vector3(x,y,z),
            --     scale = 1.5,
            --     color = Vector3(139/255,69/255,20/255),
            --     MultColour_Flag = true,
            -- })
    ----------------------------------------------------------------------------------------------------------------
            -- ThePlayer:AddTag("fwd_in_pdt_tag.carefulwalking")
            -- ThePlayer:RemoveTag("fwd_in_pdt_tag.carefulwalking")
            -- fwd_in_pdt_welness_fracture
            -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_fracture")
            -- ThePlayer.components.fwd_in_pdt_wellness:Remove_Debuff("fwd_in_pdt_welness_fracture")
    ----------------------------------------------------------------------------------------------------------------
    -- TheWorld:DoTaskInTime(1,function()
            
    --                 TheWorld:PushEvent("fwd_in_pdt_world_spawner.thief_2_all_player")
    --     end)
            -- c_select():PushEvent("fwd_in_pdt_event.stewer_finish")
    ----------------------------------------------------------------------------------------------------------------
        --    local ents = TheSim:FindEntities(x, y, z, 30, {"fwd_in_pdt_equipment_shield_of_light"}, nil, nil)
        --    for k, v in pairs(ents) do
        --         if v and v.prefab == "fwd_in_pdt_equipment_shield_of_light" then
        --             local inst = v
        --             --------------------------------------------------------------------
        --                 local fx = inst.___fx
        --                 -- fx.AnimState:SetLayer(LAYER_WORLD)
        --                 fx.AnimState:SetLayer(LAYER_BACKGROUND)
        --                 -- fx.AnimState:SetOrientation(ANIM_ORIENTATION.BillBoard)
        --                 fx.AnimState:SetOrientation(ANIM_ORIENTATION.OnGround)
        --                 -- fx.AnimState:SetOrientation(ANIM_ORIENTATION.OnGroundFixed)
        --                 inst.AnimState:SetSortOrder(-1)
        --                 -- fx:Hide()
        --                 -- for i = 0, 9, 1 do
        --                 --     inst:DoTaskInTime(i*5,function()
        --                 --         print("++++",i)
        --                 --         fx.AnimState:SetLayer(i)
        --                 --     end)
        --                 -- end
        --             --------------------------------------------------------------------
        --         end
        --    end
    ----------------------------------------------------------------------------------------------------------------
        -- print(TheWorld.Map:IsVisualGroundAtPoint(x,y,z))
        -- print(TheWorld.Map:IsValidTileAtPoint(x,y,z))
        -- local tile = TheWorld.Map:GetTileAtPoint(x,y,z)
        -- print(GROUND.IMPASSABLE == tile )
        -- TheWorld.fwd_in_pdt_events.void_fishing_hook = function()
        --     -- return SpawnPrefab("deerclops")
        --     return SpawnPrefab("krampus_sack")
        --     -- return SpawnPrefab("bearger")
        -- end
        -- local target = SpawnPrefab("krampus_sack")
        -- -- local target = SpawnPrefab("log")
        -- if target.AnimState then
        --     local debugstring = target.entity:GetDebugString()
        --     local bank, build, anim = debugstring:match("bank: (.+) build: (.+) anim: .+:(.+) Frame")
        --     if (not bank) or (bank:find("FROMNUM")) and target.AnimState.GetBank then
        --         -- bank = target.prefab
        --         bank = target.AnimState:GetBank()
        --     end
        --     if (not build) or (build:find("FROMNUM")) then
        --         build = target.prefab
        --     end
        --     -- print(debugstring)
        --     print(bank,build,anim)

        -- end

        -- target:Remove()

    ----------------------------------------------------------------------------------------------------------------
    --枪支动作试验
        -- ThePlayer.AnimState:PlayAnimation("dart_lag")
        -- ThePlayer.AnimState:PushAnimation("catch", false)
    ----------------------------------------------------------------------------------------------------------------
    --- 标签测试
            -- local target_tags = 0
            -- for i = 1, 1000, 1 do
            --     if ThePlayer:HasTag("my_test_tag_"..tostring(i)) then
            --         target_tags = target_tags + 1
            --     end
            -- end
    ----------------------------------------------------------------------------------------------------------------
        -- local cooking = require("cooking")

        -- -- TUNING.temp_test_fn = function(inst)
        -- --             -- local recipe = cooking.GetRecipe(inst.prefab, product)
        -- --     -- local food_base_prefab = item_inst.nameoverride or item_inst.prefab
        -- --     -- print(food_base_prefab)
        -- --     -- local crash_flag,ret = pcall(function()
        -- --     --     local recipe = cooking.GetRecipe("portablecookpot", food_base_prefab)   --- 获取大厨锅 的配方
        -- --     --     print("recipe",recipe)
        -- --     --     if recipe then
        -- --     --         return true
        -- --     --     end
        -- --     --     return false
        -- --     -- end)
            
        -- --     -- if crash_flag then
        -- --     --     return ret
        -- --     -- else
        -- --     --     print("error")
        -- --     --     print(ret)
        -- --     --     return false
        -- --     -- end
        -- --     ---------------------------------------------------------------------------------------------------
        -- --     local crash_flag,crash_reason = pcall(function()
                
        -- --         print("++++++++++++666666666666")

                            
                        

        -- --     end)
        -- --     if crash_flag == false then
        -- --         print("Error")
        -- --         print(crash_reason)
        -- --     end
        -- --     ---------------------------------------------------------------------------------------------------


        -- -- end

        -- local table_inst = TheSim:FindFirstEntityWithTag("fwd_in_pdt_container_mahogany_table")
        -- -- table_inst.AnimState:Hide("TEMP_SLOT1")
        -- -- table_inst.AnimState:Show("TEMP_SLOT4")
        -- table_inst.AnimState:Hide("TEMP_SLOT4")
    ----------------------------------------------------------------------------------------------------------------
    -- 地图
        -- ThePlayer.HUD.controls:ToggleMap() -- 显示/隐藏地图
        -- ThePlayer:DoTaskInTime(1,function()            
        
        --     -- ThePlayer.HUD.controls:ToggleMap()
        --     ThePlayer:PushEvent("fwd_in_pdt_event.ToggleMap")
        -- end)
    ----------------------------------------------------------------------------------------------------------------
        -- ThePlayer.AnimState:PlayAnimation("telescope")
        -- ThePlayer.AnimState:PushAnimation("telescope_pst")
    ----------------------------------------------------------------------------------------------------------------
    ----
            -- local range = 15
            -- local ents = TheSim:FindEntities(x, y, z, range, {"structure"}, {"burnt"}, nil)
            -- local ents_house = {}
            -- for k, temp in pairs(ents) do
            --     if temp and temp.prefab == "pighouse" then
            --         table.insert(ents_house,temp)
            --     end
            -- end
            -- for k, pighouse in pairs(ents_house) do
            --     pighouse.SoundEmitter:PlaySound("dontstarve/common/pighouse_door")
            --     local temp_pt = Vector3(pighouse.Transform:GetWorldPosition())
            --     local pigman = SpawnPrefab("pigman")
            --     pigman.Transform:SetPosition(temp_pt.x, 0, temp_pt.z)
            --     -- if pigman.components.hauntable then
            --     --     pigman.components.hauntable:Panic(30)
            --     -- end
            -- end

            -- local pigmen = TheSim:FindEntities(x, y, z, range, {"pig"}, {"werepig"}, nil)
            -- for k, pigman in pairs(pigmen) do
            --     if pigman.components.hauntable then
            --         pigman.components.hauntable:Panic(30)
            --     end
            -- end

                -- local pigmen = TheSim:FindEntities(x, y, z, 15, {"pig"}, {"werepig"}, nil)
                -- for k, pigman in pairs(pigmen) do
                --     if pigman.components.werebeast then
                --         pigman.components.werebeast:SetWere(300)
                --     end
                -- end
                -- local sound = "dontstarve/creatures/werepig/howl"
                -- -- local sound = "dontstarve/creatures/werepig/grunt"
                -- -- local sound = "dontstarve/creatures/werepig/transformToWere"
                -- ThePlayer.SoundEmitter:PlaySound(sound)
    ----------------------------------------------------------------------------------------------------------------
    ---- miss 测试
                    
                    -- ThePlayer.components.combat:Fwd_In_Pdt_Add_Miss_Check(ThePlayer,function(targ,...)
                    --     print("Miss target",targ)
                    --     SpawnPrefab("fwd_in_pdt_fx_miss"):PushEvent("Set",{
                    --         target = targ,
                    --         speed = 2,
                    --     })
                    --     return true
                    -- end)
                    -- ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_attack_miss")

                    -- ThePlayer.components.fwd_in_pdt_wellness:Remove_Debuff("fwd_in_pdt_welness_attack_miss")
    ----------------------------------------------------------------------------------------------------------------
    -------
        ThePlayer.components.fwd_in_pdt_wellness:Add_Debuff("fwd_in_pdt_welness_mouse_and_camera_crazy")
        -- ThePlayer.components.fwd_in_pdt_wellness:Remove_Debuff("fwd_in_pdt_welness_mouse_and_camera_crazy")
    ----------------------------------------------------------------------------------------------------------------
    print("WARNING:PCALL END   +++++++++++++++++++++++++++++++++++++++++++++++++")
end)

if flg == false then
    print("Error : ",error_code)
end

-- dofile(resolvefilepath("test_fn/test.lua"))
